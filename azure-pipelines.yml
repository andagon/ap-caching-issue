trigger:
  batch: true
  branches:
    include:
      - master

pr: none

pool:
  vmImage: 'windows-latest'

variables:
  yarnCacheFolder: $(Pipeline.Workspace)/.yarn
  majorVersion: '0'
  minorVersion: '1'

name: $(majorVersion).$(minorVersion)$(Rev:.r)

steps:
- checkout: self
  persistCredentials: true

- task: NodeTool@0
  inputs:
    versionSpec: '12.18.x'
  displayName: 'install Node.js'

- script: yarn config set cache-folder $(yarnCacheFolder)
  displayName: 'yarn config set cache-folder'

- task: Cache@2
  inputs:
    key: 'version1 | yarn | "$(Agent.OS)" | yarn.lock'
    restoreKeys: |
       version1 | yarn | "$(Agent.OS)"
       version1 | yarn
    path: $(yarnCacheFolder)
  displayName: 'restore Yarn packages from cache'

- script: yarn config set version-git-tag false
  displayName: 'yarn config set version-git-tag false'

- script: yarn version --new-version $(Build.BuildNumber)
  displayName: 'yarn version --new-version $(Build.BuildNumber)'

- script: yarn install --frozen-lockfile
  displayName: 'yarn install --frozen-lockfile'

- script: yarn lint
  displayName: 'yarn lint'

- script: yarn build # --dest $(Build.ArtifactStagingDirectory)
  displayName: 'yarn build'

- task: ArchiveFiles@2
  displayName: 'zip'
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)/dist'
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/aquacloud-frontend-$(Build.BuildNumber).zip'
    replaceExistingArchive: true
    includeRootFolder: false

- task: PublishPipelineArtifact@1
  displayName: 'publish artifact'
  inputs:
    targetPath: $(Build.ArtifactStagingDirectory)
    artifactName: frontend

- script: |
    git tag $(Build.BuildNumber)
    git push origin $(Build.BuildNumber)
  workingDirectory: $(Build.SourcesDirectory)
  displayName: 'add version tag to Github'